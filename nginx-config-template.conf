# Nginx Configuration Template for Phygital Application
# Save this to: /etc/nginx/sites-available/phygital
# Then create symlink: sudo ln -s /etc/nginx/sites-available/phygital /etc/nginx/sites-enabled/
#
# IMPORTANT: Replace 'yourdomain.com' with your actual domain name

# Backend API Server
server {
    listen 80;
    listen [::]:80;
    server_name api.yourdomain.com;  # REPLACE with your domain

    # Will be automatically configured by Certbot for HTTPS
    
    location / {
        # Proxy to Node.js backend
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        
        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Disable caching for API
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts for large file uploads
        proxy_connect_timeout 600s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
        send_timeout 600s;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://localhost:5000/health;
        access_log off;
    }

    # Max body size for file uploads (100MB)
    client_max_body_size 100M;
    
    # Buffer sizes for large requests
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;
}

# Frontend Application
server {
    listen 80;
    listen [::]:80;
    server_name yourdomain.com www.yourdomain.com;  # REPLACE with your domain

    # Will be automatically configured by Certbot for HTTPS

    # Document root - frontend build
    root /var/www/phygital/frontend/dist;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Cache static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Cache manifest and service worker
    location ~* (manifest\.json|sw\.js)$ {
        expires 0;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # Handle QR scan page
    location /qr-scan.html {
        try_files $uri =404;
        expires 0;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # Handle React Router - all other routes
    location / {
        try_files $uri $uri/ /index.html;
        expires 0;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=*, microphone=*, geolocation=*" always;

    # Hide Nginx version
    server_tokens off;

    # Logging
    access_log /var/log/nginx/phygital-access.log;
    error_log /var/log/nginx/phygital-error.log warn;
}

# Redirect non-www to www (optional - uncomment if you prefer www)
# server {
#     listen 80;
#     listen [::]:80;
#     server_name yourdomain.com;  # REPLACE with your domain
#     return 301 https://www.yourdomain.com$request_uri;
# }


